; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Charset Tool"
#define MyAppVersion "1.0"
#define MyAppPublisher "FougSys Ltd"
#define MyAppURL "http://www.fougsys.fr"
#define MyAppExeName "charset-tool.exe"

#ifndef AppBuildDir
# define AppBuildDir GetEnv("APP_BUILD_ROOT")
#endif

#ifndef QtDir
# define QtDir GetEnv("QTDIR")
#endif

#define MsvcVersionName StringChange(GetEnv("QMAKESPEC"), "win32-", "")
#define TargetArch GetEnv("APP_TARGET_ARCH")

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D63B6B07-8368-45BB-AD73-2493DB9BA5B0}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher=FougSys Ltd.
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppPublisher}\{#MyAppName}
AllowNoIcons=yes
OutputBaseFilename=setup_charset-tool_v{#MyAppVersion}_win_{#TargetArch}
Compression=lzma
SolidCompression=yes

#if TargetArch == "x86_64"
  ArchitecturesInstallIn64BitMode=x64
#endif


[Languages]
Name: "en"; MessagesFile: "compiler:Default.isl";          LicenseFile:"..\..\Licence_CeCILL-B_V1-en.txt"
Name: "fr"; MessagesFile: "compiler:Languages\French.isl"; LicenseFile:"..\..\Licence_CeCILL-B_V1-fr.txt"

[CustomMessages]
en.installVcRuntime = Installing redistributable {#MsvcVersionName} runtime ...
fr.installVcRuntime = Installation du package redistribuable {#MsvcVersionName} ...

; First clear the setup folder (in case of a setup overwrite)
[InstallDelete]
Type: filesandordirs; Name: "{app}\*"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Files]
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

Source: "{#AppBuildDir}\release\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "run_charset-tool.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: "setpaths.bat";         DestDir: "{app}"; Flags: ignoreversion

#if TargetArch == "x86_32"
# define VcRedistArch "x86"
#elif TargetArch == "x86_64"
# define VcRedistArch "x64"
#endif
Source: "{#MsvcVersionName}\vcredist_{#VcRedistArch}.exe"; DestDir: "{app}\3rdparty"; Flags: deleteafterinstall

Source: "qt.conf"; DestDir: "{app}"
Source: "{#QtDir}\bin\Qt5Core.dll";         DestDir: "{app}\3rdparty"; Flags: ignoreversion
Source: "{#QtDir}\bin\Qt5Concurrent.dll";   DestDir: "{app}\3rdparty"; Flags: ignoreversion
Source: "{#QtDir}\bin\Qt5Gui.dll";          DestDir: "{app}\3rdparty"; Flags: ignoreversion
Source: "{#QtDir}\bin\Qt5Widgets.dll";      DestDir: "{app}\3rdparty"; Flags: ignoreversion
Source: "{#QtDir}\bin\icudt51.dll";         DestDir: "{app}\3rdparty"; Flags: ignoreversion
Source: "{#QtDir}\bin\icuin51.dll";         DestDir: "{app}\3rdparty"; Flags: ignoreversion
Source: "{#QtDir}\bin\icuuc51.dll";         DestDir: "{app}\3rdparty"; Flags: ignoreversion
Source: "{#QtDir}\plugins\platforms\qwindows.dll";  DestDir: "{app}\3rdparty\plugins\platforms"; Flags: ignoreversion

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\run_charset-tool.bat"; WorkingDir: "{app}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\run_charset-tool.bat"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\run_charset-tool.bat"; Tasks: quicklaunchicon

[Run]
Filename: "{app}\3rdparty\vcredist_{#VcRedistArch}.exe"; Parameters: "/q"; StatusMsg: "{cm:installVcRuntime}"

[Code]
procedure CurStepChanged(CurStep: TSetupStep);
begin
  if CurStep = ssPostInstall then
  begin
    // Update the file setpaths.bat
    SaveStringToFile(ExpandConstant('{app}\setpaths.bat'),
                     ExpandConstant('set APP_PATH={app}'),
                     True)
  end;
end;
